// Code generated by "stringer -type TokenType -trimprefix Token"; DO NOT EDIT.

package lox

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenLeftParen-0]
	_ = x[TokenRightParen-1]
	_ = x[TokenLeftBrace-2]
	_ = x[TokenRightBrace-3]
	_ = x[TokenComma-4]
	_ = x[TokenDot-5]
	_ = x[TokenMinus-6]
	_ = x[TokenPlus-7]
	_ = x[TokenSemicolon-8]
	_ = x[TokenSlash-9]
	_ = x[TokenStar-10]
	_ = x[TokenBang-11]
	_ = x[TokenBangEqual-12]
	_ = x[TokenEqual-13]
	_ = x[TokenEqualEqual-14]
	_ = x[TokenGreater-15]
	_ = x[TokenGreaterEqual-16]
	_ = x[TokenLess-17]
	_ = x[TokenLessEqual-18]
	_ = x[TokenIdentifier-19]
	_ = x[TokenString-20]
	_ = x[TokenNumber-21]
	_ = x[TokenAnd-22]
	_ = x[TokenClass-23]
	_ = x[TokenElse-24]
	_ = x[TokenFalse-25]
	_ = x[TokenFun-26]
	_ = x[TokenFor-27]
	_ = x[TokenIf-28]
	_ = x[TokenNil-29]
	_ = x[TokenOr-30]
	_ = x[TokenPrint-31]
	_ = x[TokenReturn-32]
	_ = x[TokenSuper-33]
	_ = x[TokenThis-34]
	_ = x[TokenTrue-35]
	_ = x[TokenVar-36]
	_ = x[TokenWhile-37]
	_ = x[TokenEOF-38]
	_ = x[TokenLine-39]
}

const _TokenType_name = "LeftParenRightParenLeftBraceRightBraceCommaDotMinusPlusSemicolonSlashStarBangBangEqualEqualEqualEqualGreaterGreaterEqualLessLessEqualIdentifierStringNumberAndClassElseFalseFunForIfNilOrPrintReturnSuperThisTrueVarWhileEOFLine"

var _TokenType_index = [...]uint8{0, 9, 19, 28, 38, 43, 46, 51, 55, 64, 69, 73, 77, 86, 91, 101, 108, 120, 124, 133, 143, 149, 155, 158, 163, 167, 172, 175, 178, 180, 183, 185, 190, 196, 201, 205, 209, 212, 217, 220, 224}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
